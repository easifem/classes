
!----------------------------------------------------------------------------
!                                                           SetPrecondition
!----------------------------------------------------------------------------


!> authors: Vikas Sharma, Ph. D.
! date: 16 July 2021
! summary: Set preconditioners in [[LinSolver_]]
!
!# Introduction
!
! This subroutine set the preconditioner required to solve system of
! linear equations by using the
!
! - For `precondType=p_ilut` `ipar( 1 )` denotes number of fills and `fpar(1)`
! denotes the dropping tolerance
! - For `p_ilutp`:
!   - `ipar(1)` number of fills default is 10
!   - `ipar(2)` mbloc, default is size of problem
!   - `fpar(1)` drop tolerance, default is 1.0E-4
!   - `fpar(2)` permutation tolerance, default is 0.5
! - For `p_ilud`
!   - `fpar(1)` denotes drop tolerance
!   - `fpar(2)` denotes value of alpha
! - For `p_iludp`
!   - `ipar(1)` denotes mbloc
!   - `fpar(1)` denotes drop tolerance
!   - `fpar(2)` denotes value of alpha
!   - `fpar(3)` denotes permutation tolerance

INTERFACE
MODULE SUBROUTINE ls_setPrecondition( obj, precondtype, ipar, fpar )
  CLASS( LinSolver_ ), INTENT( INOUT ) :: obj
  INTEGER( I4B ), INTENT( IN ) :: precondtype
  INTEGER( I4B ), OPTIONAL, INTENT( IN ) :: ipar( : )
  REAL( DFP ), OPTIONAL, INTENT( IN ) :: fpar( : )
END SUBROUTINE ls_setPrecondition
END INTERFACE

!----------------------------------------------------------------------------
!                                                         setPreconditioning
!----------------------------------------------------------------------------

MODULE PROCEDURE skit_setprecond
  !
  obj % precondType = precondType
  ! always left precond
  obj % ipar( 2 ) = 1
  obj % lfil = 10
  obj % mbloc = 0
  obj % droptol = 1.0E-4
  obj % permtol = 0.5
  obj % alpha = 1.0

  SELECT CASE( precondType )
  CASE( p_none )
    obj % ipar( 2 ) = 0
  CASE( p_ilut )
    ! extra options are drop-tol and lfil
    IF( PRESENT( fpar ) ) THEN
      obj % droptol = fpar( 1 )
    END IF

    IF( PRESENT( ipar ) ) THEN
      obj % lfil = ipar( 1 )
    END IF

  CASE( p_ilutp )
    ! extra option
    ! ipar( 1 ) = lfil
    ! ipar( 2 ) = mbloc
    ! fpar( 1 ) = droptol
    ! fpar( 2 ) = permtol
    IF( PRESENT( ipar ) ) THEN
      obj % lfil = ipar( 1 )
      obj % mbloc = ipar( 2 )
    END IF

    IF( PRESENT( fpar ) ) THEN
      obj % droptol = fpar( 1 )
      obj % permtol = fpar( 2 )
    END IF

  CASE( p_ilud )
    ! fpar( 1 ) = droptol
    ! fpar( 2 ) = alpha
    IF( PRESENT( fpar ) ) THEN
      obj % droptol = fpar( 1 )
      obj % alpha = fpar( 2 )
    END IF

  CASE( p_iludp )
    IF( PRESENT( ipar ) ) THEN
      obj % mbloc = ipar( 1 )
    END IF
    IF( PRESENT( fpar ) ) THEN
      obj % droptol = fpar( 1 )
      obj % alpha = fpar( 2 )
      obj % permtol = fpar( 3 )
    END IF

  END SELECT

END PROCEDURE skit_setprecond
