EASIFEM, Expandable And Scalable Infrastructure for Finite Element Methods,
is a framework for implementing finite element methods in Modern Fortran.
easifemBase is a part of EASIFEM library.
Copyright(C) 2020-2023
Vikas Sharma
Ph.D. (Kyoto University, Japan)
B. Tech. (IIT Bombay, India)
vickysharma0812@gmail.com
https://www.easifem.com

===========================================================================
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https: //www.gnu.org/licenses/>

===========================================================================

EASIFEM depends upon following fortran-libraries.
It is worth noting that some of these libraries have been
modified by EASIFEM depending upon necessary needs.

(1) PENF
PENF is developed  by [Mr. Szaghi](https://github.com/szaghi).
This library tries to exploit code portability for modern (2003+) Fortran projects.
It is a pure Fortran library for achieving portable codes for modern Fortran projects.
It  provides many number-to-string and vice-versa facilities.
[Read more](https://github.com/szaghi/PENF/tree/master/src)

(2) BeFoR64

This library is also a fortran project of [Mr. Szaghi](https://github.com/szaghi).
It is for *base64* encoding/decoding for modern Fortran projects.
[Read more](https://github.com/szaghi/BeFoR64)

(3) StringiFor

This library is also a fortran project of [Mr. Szaghi](https://github.com/szaghi).
This library makes an attempt to define string data type for handling characters in an object oriented way.
[Read more](https://github.com/szaghi/StringiFor)

(4)) FoXy

This is a fortran library which is designed to handle XML files.
[Read more](https://github.com/Fortran-FOSS-Programmers/FoXy)

(5) vtkFortran

This fortran library handles IO with vtk files.
[Read more](https://github.com/szaghi/VTKFortran)

(6) H5Fortran

This fortran project, which is developed by [Michael Hirsch](https://github.com/scivision), can handle IO with hdf5 files.
[Read more](https://github.com/geospace-code/h5fortran.git).

(7) OGPF
This is program creates an interface between modern fortran and gnuplot.
This is a useful library for visualising fortran data using gnuplot. [Read more](https://github.com/kookma/ogpf).
In easifem this is renamed as `Gnuplot_Method.F90`.

(8) Sparsekit

Sparsekit is a legacy fortran code written by the great [Yusef Saad](https://en.wikipedia.org/wiki/Yousef_Saad) for
peforming linear algebra with sparse matrices. [Read more](https://www-users.cs.umn.edu/~saad/software/SPARSKIT/).
Some of these programs have been rewritten from F77 to Modern fortran.

(9) M_SYSTEM

This is Fortran interface to C system interface. It is taken from <https://github.com/urbanjost/M_system>.
The original name of the program has been changed from M_SYSTEM to System_Method.
This is to confirm to the coding sytles of easifem.

(10) FACE

Fortran ANSI Color. Source: <https://github.com/szaghi/FACE>

(11) ExceptionHandlerType

This is libray can handle exceptions in fortran. Source: <https://github.com/CASL/Futility>.
This library is modified as per the needs.

(12) Fortran-TestAnything

It is a library for testing fortran program. Source : <https://github.com/dennisdjensen/fortran-testanything>.
The original name of the program is changed from Test.F90 to Test_Method.F90 to confirm the coding standards of easifem.
